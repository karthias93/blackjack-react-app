{"version":3,"sources":["components/Hand/Hand.module.css","components/App/types.ts","components/Card/Card.tsx","components/Hand/Hand.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx","components/App/App.module.css","components/Card/Card.module.css"],"names":["module","exports","GameState","Deal","Message","Card","value","suit","hidden","className","componentStyles","hiddenCard","card","black","red","Hand","title","cards","length","getTitle","map","index","App","generateDeck","suits","deck","i","j","push","useState","setDeck","userCards","setUserCards","userScore","setUserScore","userCount","setUserCount","dealerCards","setDealerCards","dealerScore","setDealerScore","dealerCount","setDealerCount","init","gameState","setGameState","hitStand","message","setMessage","hitDisabled","standDisabled","resetDisabled","buttonState","setButtonState","useEffect","drawCard","user","dealer","userTurn","calculate","bust","dealerTurn","checkWin","dealType","randomIndex","Math","floor","random","splice","dealCard","alert","setScore","total","forEach","Number","aces","filter","userWin","dealerWin","tie","Alert","color","Button","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.101d39d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hand-container\":\"Hand_hand-container__1srQX\",\"card-container\":\"Hand_card-container__PF0FR\",\"title\":\"Hand_title__1Hy0g\"};","export enum GameState {\r\n    bet,\r\n    init,\r\n    userTurn,\r\n    dealerTurn\r\n}\r\n\r\nexport enum Deal {\r\n    user,\r\n    dealer,\r\n    hidden\r\n}\r\n\r\nexport enum Message {\r\n    hitStand = 'Hit or Stand?',\r\n    bust = 'Bust!',\r\n    userWin = 'You Win!',\r\n    dealerWin = 'Dealer Wins!',\r\n    tie = 'Tie!'\r\n}","import React from 'react'\r\nimport { CardProps } from './types'\r\nimport componentStyles from './Card.module.css'\r\n\r\nconst Card: React.FC<CardProps> = ({ value, suit, hidden }) => {\r\n\r\n    const getColor = () => {\r\n      if (suit === '♠' || suit === '♣') {\r\n        return componentStyles.black;\r\n      }\r\n      else {\r\n        return componentStyles.red;\r\n      }\r\n    }\r\n  \r\n    const getCard = () => {\r\n      if (hidden) {\r\n        return (\r\n          <div className={componentStyles.hiddenCard} />\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div className={componentStyles.card}>\r\n            <div className={getColor()}>\r\n              <h1 className={componentStyles.value}>{value}</h1>\r\n              <h1 className={componentStyles.suit}>{suit}</h1>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        {getCard()}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Card;","import React from 'react'\r\nimport { HandProps} from './types'\r\nimport componentStyles from './Hand.module.css'\r\nimport Card from './../Card'\r\n\r\nconst Hand: React.FC<HandProps> = ({ title, cards }) => {\r\n\r\n    const getTitle = () => {\r\n        if (cards.length > 0) {\r\n          return (\r\n            <h3 className={componentStyles.title}>{title}</h3>\r\n          );\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div className={componentStyles['hand-container']}>\r\n            {getTitle()}\r\n            <div className={componentStyles['card-container']}>\r\n                {cards.map((card: any, index: number) => {\r\n                    return (\r\n                        <Card key={index} value={card.value} suit={card.suit} hidden={card.hidden} />\r\n                    );\r\n                })}\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Hand;","import React, { useEffect, useState } from 'react';\r\nimport componentStyles from './App.module.css';\r\nimport { GameState, Deal, Message } from './types';\r\nimport { Alert, Button } from 'reactstrap';\r\nimport Hand from './../Hand';\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const generateDeck = () => {\r\n        const cards = [2,3,4,5,6,7,8,9,10,'J','Q','K','A'];\r\n        const suits = ['spades','diamonds','clubs','hearts'];\r\n        const deck = [];\r\n        for (let i = 0; i < cards.length; i++) {\r\n          for (let j = 0; j < suits.length; j++) {\r\n            deck.push({value: cards[i], suit: suits[j]});\r\n          }\r\n        }\r\n        return deck;\r\n    }\r\n      \r\n    const [deck, setDeck]: any[] = useState(generateDeck());\r\n\r\n    const [userCards, setUserCards]: any[] = useState([]);\r\n    const [userScore, setUserScore] = useState(0);\r\n    const [userCount, setUserCount] = useState(0);\r\n  \r\n    const [dealerCards, setDealerCards]: any[] = useState([]);\r\n    const [dealerScore, setDealerScore] = useState(0);\r\n    const [dealerCount, setDealerCount] = useState(0);\r\n\r\n    const [gameState, setGameState] = useState(GameState.init);\r\n    const [message, setMessage] = useState(Message.hitStand);\r\n    const [buttonState, setButtonState] = useState({\r\n        hitDisabled: false,\r\n        standDisabled: false,\r\n        resetDisabled: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (gameState === GameState.init) {\r\n            drawCard(Deal.user);\r\n            drawCard(Deal.hidden);\r\n            drawCard(Deal.user);\r\n            drawCard(Deal.dealer);\r\n            setGameState(GameState.userTurn);\r\n            setMessage(Message.hitStand);\r\n        }\r\n    }, [gameState]);\r\n    \r\n    useEffect(() => {\r\n        calculate(userCards, setUserScore);\r\n        setUserCount(userCount + 1);\r\n    }, [userCards]);\r\n    \r\n    useEffect(() => {\r\n        calculate(dealerCards, setDealerScore);\r\n        setDealerCount(dealerCount + 1);\r\n    }, [dealerCards]);\r\n    \r\n    useEffect(() => {\r\n        if (gameState === GameState.userTurn) {\r\n            if (userScore === 21) {\r\n                buttonState.hitDisabled = true;\r\n                setButtonState({ ...buttonState });\r\n            } else if (userScore > 21) {\r\n                bust();\r\n            }\r\n        }\r\n    }, [userCount]);\r\n    \r\n    useEffect(() => {\r\n        if (gameState === GameState.dealerTurn) {\r\n            if (dealerScore >= 17) {\r\n                checkWin();\r\n            } else {\r\n                drawCard(Deal.dealer);\r\n            }\r\n        }\r\n    }, [dealerCount]);\r\n    \r\n    const resetGame = () => {\r\n\r\n        setDeck(generateDeck());\r\n    \r\n        setUserCards([]);\r\n        setUserScore(0);\r\n        setUserCount(0);\r\n    \r\n        setDealerCards([]);\r\n        setDealerScore(0);\r\n        setDealerCount(0);\r\n    \r\n        setGameState(GameState.init);\r\n        setMessage(Message.hitStand);\r\n        setButtonState({\r\n            hitDisabled: false,\r\n            standDisabled: false,\r\n            resetDisabled: true\r\n        });\r\n    }\r\n    \r\n    const drawCard = (dealType: Deal) => {\r\n        if (deck.length > 0) {\r\n            const randomIndex = Math.floor(Math.random() * deck.length);\r\n            const card = deck[randomIndex];\r\n            deck.splice(randomIndex, 1);\r\n            setDeck([...deck]);\r\n\r\n            switch (card.suit) {\r\n                case 'spades':\r\n                    dealCard(dealType, card.value, '♠');\r\n                    break;\r\n                case 'diamonds':\r\n                    dealCard(dealType, card.value, '♦');\r\n                    break;\r\n                case 'clubs':\r\n                    dealCard(dealType, card.value, '♣');\r\n                    break;\r\n                case 'hearts':\r\n                    dealCard(dealType, card.value, '♥');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n          alert('All cards have been drawn');\r\n        }\r\n    }\r\n    \r\n    const dealCard = (dealType: Deal, value: string, suit: string) => {\r\n        switch (dealType) {\r\n            case Deal.user:\r\n                userCards.push({ 'value': value, 'suit': suit, 'hidden': false });\r\n                setUserCards([...userCards]);\r\n                break;\r\n            case Deal.dealer:\r\n                dealerCards.push({ 'value': value, 'suit': suit, 'hidden': false });\r\n                setDealerCards([...dealerCards]);\r\n                break;\r\n            case Deal.hidden:\r\n                dealerCards.push({ 'value': value, 'suit': suit, 'hidden': true });\r\n                setDealerCards([...dealerCards]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const revealCard = () => {\r\n        dealerCards.filter((card: any) => {\r\n            if (card.hidden === true) {\r\n                card.hidden = false;\r\n            }\r\n            return card;\r\n        });\r\n        setDealerCards([...dealerCards])\r\n    }\r\n    \r\n    const calculate = (cards: any[], setScore: any) => {\r\n        let total = 0;\r\n        cards.forEach((card: any) => {\r\n            if (card.hidden === false && card.value !== 'A') {\r\n                switch (card.value) {\r\n                case 'K':\r\n                    total += 10;\r\n                    break;\r\n                case 'Q':\r\n                    total += 10;\r\n                    break;\r\n                case 'J':\r\n                    total += 10;\r\n                    break;\r\n                default:\r\n                    total += Number(card.value);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        const aces = cards.filter((card: any) => {\r\n            return card.value === 'A';\r\n        });\r\n        aces.forEach((card: any) => {\r\n            if (card.hidden === false) {\r\n                if ((total + 11) > 21) {\r\n                    total += 1;\r\n                } else if ((total + 11) === 21) {\r\n                    if (aces.length > 1) {\r\n                        total += 1;\r\n                    } else {\r\n                        total += 11;\r\n                    }\r\n                } else {\r\n                    total += 11;\r\n                }\r\n            }\r\n        });\r\n        setScore(total);\r\n    }\r\n    \r\n    const hit = () => {\r\n        drawCard(Deal.user);\r\n    }\r\n    \r\n    const stand = () => {\r\n        buttonState.hitDisabled = true;\r\n        buttonState.standDisabled = true;\r\n        buttonState.resetDisabled = false;\r\n        setButtonState({ ...buttonState });\r\n        setGameState(GameState.dealerTurn);\r\n        revealCard();\r\n    }\r\n    \r\n    const bust = () => {\r\n        buttonState.hitDisabled = true;\r\n        buttonState.standDisabled = true;\r\n        buttonState.resetDisabled = false;\r\n        setButtonState({ ...buttonState });\r\n        setMessage(Message.bust);\r\n    }\r\n    \r\n    const checkWin = () => {\r\n        if (userScore > dealerScore || dealerScore > 21) {\r\n          setMessage(Message.userWin);\r\n        }\r\n        else if (dealerScore > userScore) {\r\n          setMessage(Message.dealerWin);\r\n        }\r\n        else {\r\n          setMessage(Message.tie);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={componentStyles['app-container']}>\r\n            <h1 className={componentStyles['app-header']}>Blackjack</h1>\r\n            {message &&\r\n                <Alert color=\"primary\" className={componentStyles['status-message']}>\r\n                    {message}\r\n                </Alert>\r\n            }\r\n            <div className={componentStyles['buttons']}>\r\n                <Button color=\"primary\" onClick={resetGame} disabled={buttonState.resetDisabled} className={componentStyles['button']}>New Game</Button>\r\n                <Button color=\"primary\" onClick={hit} disabled={buttonState.hitDisabled} className={componentStyles['button']}>Hit</Button>\r\n                <Button color=\"primary\" onClick={stand} disabled={buttonState.standDisabled} className={componentStyles['button']}>Stand</Button>\r\n            </div>\r\n            <Hand title={`Your Hand (${userScore})`} cards={userCards} />\r\n            <Hand title={`Dealer's Hand (${dealerScore})`} cards={dealerCards} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-container\":\"App_app-container__B-15a\",\"app-header\":\"App_app-header__bjwog\",\"buttons\":\"App_buttons__2CLu5\",\"button\":\"App_button__1RN7i\",\"status-message\":\"App_status-message__10Q9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__J05-H\",\"hiddenCard\":\"Card_hiddenCard__1ONL4\",\"black\":\"Card_black__3dqZ6\",\"red\":\"Card_red__2yKI0\",\"value\":\"Card_value__3y_Zg\",\"suit\":\"Card_suit__goiX4\"};"],"sourceRoot":""}